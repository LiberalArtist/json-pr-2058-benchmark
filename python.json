{"name": "main", "class": [], "function": [{"name": "main", "dom": [{"name": "all_lines", "type": "List(String)"}], "cod": "Void"}, {"name": "output_result", "dom": [{"name": "res", "type": "List(Tuple(Int,Int))"}, {"name": "edges", "type": "List(Tuple(Int,Int))"}], "cod": "List(String)"}, {"name": "convert_to_set", "dom": [{"name": "res", "type": "List(Tuple(Int,Int,Int))"}], "cod": "List(Tuple(Int,Int))"}, {"name": "create_nodes", "dom": [{"name": "edges", "type": "List(Tuple(Int,Int,Int))"}], "cod": "List(Int)"}, {"name": "make_tuple", "dom": [{"name": "line", "type": "String"}], "cod": "Tuple(Int,Int,Int)"}, {"name": "make_set", "dom": [{"name": "line", "type": "String"}], "cod": "Tuple(Int,Int)"}, {"name": "kruskal", "dom": [{"name": "nodes", "type": "List(Int)"}, {"name": "edges", "type": "List(Tuple(Int,Int,Int))"}, {"name": "edges_to_check", "type": "List(Tuple(Int,Int))"}], "cod": "List(Tuple(Int,Int,Int))"}]}
{"function": [], "class": [{"field": [{"type": "Dict(Int,Tuple(Int,Int))", "name": "my_dict"}], "method": [{"dom": [{"type": "UnionFind", "name": "self"}, {"type": "Dict(Int,Tuple(Int,Int))", "name": "my_dict"}], "name": "__init__", "cod": "Void"}, {"dom": [{"type": "UnionFind", "name": "self"}, {"type": "Int", "name": "n"}], "name": "add_node", "cod": "Void"}, {"dom": [{"type": "UnionFind", "name": "self"}, {"type": "Int", "name": "n"}], "name": "find", "cod": "Tuple(Int,Int)"}, {"dom": [{"type": "UnionFind", "name": "self"}, {"type": "Tuple(Int,Int)", "name": "l1"}, {"type": "Tuple(Int,Int)", "name": "l2"}], "name": "union", "cod": "Void"}], "name": "UnionFind"}], "name": "union_find"}
{"name": "cardplay", "function": [], "class": [{"name": "CardPlay", "field": [{"name": "played_card_index", "type": "Int"}], "method": [{"name": "__init__", "cod": "Void", "dom": [{"name": "self", "type": "CardPlay"}, {"name": "played_card_index", "type": "Int"}]}, {"name": "apply", "cod": "Void", "dom": [{"name": "self", "type": "CardPlay"}, {"name": "player_state", "type": "PlayerState"}]}, {"name": "get_card_indices", "cod": "List(Int)", "dom": [{"name": "self", "type": "CardPlay"}]}, {"name": "verify_self", "cod": "Bool", "dom": [{"name": "self", "type": "CardPlay"}, {"name": "player_state", "type": "PlayerState"}, {"name": "food_card_index", "type": "Int"}, {"name": "card_plays_before_this", "type": "List(CardPlay)"}]}, {"name": "update_trait_counts", "cod": "List(Int)", "dom": [{"name": "self", "type": "CardPlay"}, {"name": "species_trait_count", "type": "List(Int)"}]}, {"name": "num_species_created", "cod": "Int", "dom": [{"name": "self", "type": "CardPlay"}]}]}]}
{"name": "exchange_for_population", "class": [{"method": [{"cod": "Void", "name": "__init__", "dom": [{"name": "self", "type": "ExchangeForPopulation"}, {"name": "played_card_index", "type": "Int"}, {"name": "species_index", "type": "Int"}]}, {"cod": "Void", "name": "apply", "dom": [{"name": "self", "type": "ExchangeForPopulation"}, {"name": "player_state", "type": "PlayerState"}]}, {"cod": "Bool", "name": "verify_self", "dom": [{"name": "self", "type": "ExchangeForPopulation"}, {"name": "player_state", "type": "PlayerState"}, {"name": "food_card_index", "type": "Int"}, {"name": "card_plays_before_this", "type": "List(CardPlay)"}]}, {"cod": "List(Int)", "name": "update_trait_counts", "dom": [{"name": "self", "type": "ExchangeForPopulation"}, {"name": "species_trait_count", "type": "List(Int)"}]}], "name": "ExchangeForPopulation", "field": [{"name": "played_card_index", "type": "Int"}, {"name": "species_index", "type": "Int"}]}], "function": []}
{"name": "exchange_for_species", "function": [], "class": [{"name": "ExchangeForSpecies", "field": [{"type": "Int", "name": "played_card_index"}, {"type": "List(Int)", "name": "loi"}], "method": [{"name": "__init__", "cod": "Void", "dom": [{"type": "ExchangeForSpecies", "name": "self"}, {"type": "Int", "name": "played_card_index"}, {"type": "List(Int)", "name": "loi"}]}, {"name": "apply", "cod": "Void", "dom": [{"type": "ExchangeForSpecies", "name": "self"}, {"type": "PlayerState", "name": "player_state"}]}, {"name": "get_card_indices", "cod": "List(Int)", "dom": [{"type": "ExchangeForSpecies", "name": "self"}]}, {"name": "verify_self", "cod": "Bool", "dom": [{"type": "ExchangeForSpecies", "name": "self"}, {"type": "PlayerState", "name": "player_state"}, {"type": "Int", "name": "food_card_index"}, {"type": "List(CardPlay)", "name": "card_plays_before_this"}]}, {"name": "num_species_created", "cod": "Int", "dom": [{"type": "ExchangeForSpecies", "name": "self"}]}, {"name": "update_trait_counts", "cod": "List(Int)", "dom": [{"type": "ExchangeForSpecies", "name": "self"}, {"type": "List(Int)", "name": "species_trait_count"}]}]}]}
{"function": [], "class": [{"field": [{"type": "List(List(Int))", "name": "graph"}, {"type": "List(List(Int))", "name": "flow"}, {"type": "List(List(Int))", "name": "residual"}, {"type": "Int", "name": "total_flow"}, {"type": "String", "name": "file_name"}], "method": [{"cod": "Void", "dom": [{"type": "PythonFlow", "name": "self"}], "name": "__init__"}, {"cod": "Void", "dom": [{"type": "PythonFlow", "name": "self"}], "name": "load_file"}, {"cod": "Void", "dom": [{"type": "PythonFlow", "name": "self"}], "name": "init_flow"}, {"cod": "Void", "dom": [{"type": "PythonFlow", "name": "self"}], "name": "update_residual"}, {"cod": "Void", "dom": [{"type": "PythonFlow", "name": "self"}], "name": "main_algorithm"}, {"cod": "Void", "dom": [{"type": "PythonFlow", "name": "self"}, {"type": "List(Int)", "name": "path"}], "name": "apply_path"}, {"cod": "List(Int)", "dom": [{"type": "PythonFlow", "name": "self"}], "name": "find_best_path"}, {"cod": "Int", "dom": [{"type": "PythonFlow", "name": "self"}, {"type": "List(Int)", "name": "path"}], "name": "get_minimum_cost_flow"}, {"cod": "Void", "dom": [{"type": "PythonFlow", "name": "self"}, {"type": "Int", "name": "vertex"}, {"type": "List(Int)", "name": "paths"}], "name": "get_path"}, {"cod": "List(Int)", "dom": [{"type": "PythonFlow", "name": "self"}, {"type": "Int", "name": "initial_vertex"}], "name": "get_options"}, {"cod": "Void", "dom": [{"type": "PythonFlow", "name": "self"}, {"type": "List(List(Int))", "name": "graph"}], "name": "print_graph"}], "name": "PythonFlow"}], "name": "main"}
{"class": [{"field": [{"name": "_expanded_key", "type": "List(int)"}, {"name": "_Nr", "type": "int"}], "name": "AESCipher", "method": [{"cod": "Void", "name": "__init__", "dom": [{"name": "self", "type": "AESCiper"}, {"name": "expanded_key", "type": "List(Int)"}]}, {"cod": "Void", "name": "_sub_bytes", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "state", "type": "List(Int)"}]}, {"cod": "Void", "name": "_i_sub_bytes", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "state", "type": "List(Int)"}]}, {"cod": "List(Int)", "name": "_shift_row", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "row", "type": "List(Int)"}, {"name": "shift", "type": "Int"}]}, {"cod": "List(Int)", "name": "_i_shift_row", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "row", "type": "List(Int)"}, {"name": "shift", "type": "Int"}]}, {"cod": "Void", "name": "_shift_rows", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "state", "type": "List(Int)"}]}, {"cod": "Void", "name": "_i_shift_rows", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "state", "type": "List(Int)"}]}, {"cod": "List(Int)", "name": "_mix_column", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "column", "type": "List(Int)"}, {"name": "inverse", "type": "Bool"}]}, {"cod": "Void", "name": "_mix_columns", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "state", "type": "List(Int)"}, {"name": "inverse", "type": "Bool"}]}, {"cod": "Void", "name": "_add_round_key", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "state", "type": "List(Int)"}, {"name": "round", "type": "Int"}]}, {"cod": "List(Int)", "name": "cipher_block", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "state", "type": "List(Int)"}]}, {"cod": "List(Int)", "name": "decipher_block", "dom": [{"name": "self", "type": "AESCipher"}, {"name": "state", "type": "List(Int)"}]}]}], "function": [], "name": "aes_cipher"}
{"function": [], "name": "aes_tables", "class": []}
{"function": [], "class": [{"field": [{"type": "str", "name": "name"}], "method": [{"dom": [{"type": "CBCMode", "name": "self"}, {"type": "Object(my_block_cipher,{cipher_block : Function([List(Int)],List(int)),decipher_block : Function([List(Int)],List(Int))})", "name": "block_cipher"}, {"type": "Int", "name": "block_size"}], "cod": "Void", "name": "__init__"}, {"dom": [{"type": "CBCMode", "name": "self"}, {"type": "List(Int)", "name": "plaintext"}], "cod": "List(Int)", "name": "encrypt_block"}, {"dom": [{"type": "CBCMode", "name": "self"}, {"type": "List(Int)", "name": "ciphertext"}], "cod": "List(Int)", "name": "decrypt_block"}], "name": "CBCMode"}], "name": "cbc_mode"}
{"class": [{"field": [{"type": "str", "name": "name"}, {"type": "Object(my_block_cipher,{cipher_block : Function([List(Int)],List(int)),decipher_block : Function([List(Int)],List(Int))})", "name": "_block_cipher"}, {"type": "Int", "name": "_block_size"}, {"type": "List(Int)", "name": "_iv"}], "method": [{"cod": "Void", "dom": [{"type": "CipherMode", "name": "self"}, {"type": "Object(my_block_cipher,{cipher_block : Function([List(Int)],List(int)),decipher_block : Function([List(Int)],List(Int))})", "name": "block_cipher"}, {"type": "Int", "name": "block_size"}], "name": "__init__"}, {"cod": "Void", "dom": [{"type": "CipherMode", "name": "self"}, {"type": "List(Int)", "name": "iv"}], "name": "set_iv"}, {"cod": "List(Int)", "dom": [{"type": "CipherMode", "name": "self"}, {"type": "List(Int)", "name": "plaintext"}], "name": "encrypt_block"}, {"cod": "List(Int)", "dom": [{"type": "CipherMode", "name": "self"}, {"type": "List(Int)", "name": "ciphertext"}], "name": "decrypt_block"}], "name": "CipherMode"}], "function": [], "name": "cipher_mode"}
{"name": "key_expander", "function": [], "class": [{"name": "KeyExpander", "field": [{"name": "_key_length", "type": "int"}, {"name": "_n", "type": "int"}, {"name": "_expanded_key_length", "type": "Dict(int,int)"}], "method": [{"name": "__init__", "dom": [{"name": "self", "type": "KeyExpander"}, {"name": "key_length", "type": "Int"}], "cod": "Void"}, {"name": "_core", "dom": [{"name": "self", "type": "KeyExpander"}, {"name": "key_array", "type": "List(Int)"}, {"name": "iteration", "type": "Int"}], "cod": "List(int)"}, {"name": "_xor_list", "dom": [{"name": "self", "type": "KeyExpander"}, {"name": "list_1", "type": "List(Int)"}, {"name": "list_2", "type": "List(Int)"}], "cod": "List(int)"}, {"name": "expand", "dom": [{"name": "self", "type": "KeyExpander"}, {"name": "key_array", "type": "List(Int)"}], "cod": "List(int)"}]}]}
{"function": [], "name": "main", "class": [{"method": [{"cod": "Void", "name": "__init__", "dom": [{"type": "AESdemo", "name": "self"}]}, {"cod": "Void", "name": "new_salt", "dom": [{"type": "AESdemo", "name": "self"}]}, {"cod": "Void", "name": "set_iv", "dom": [{"type": "AESdemo", "name": "self"}, {"type": "List(int)", "name": "iv"}]}, {"cod": "Void", "name": "set_key", "dom": [{"type": "AESdemo", "name": "self"}, {"type": "List(int)", "name": "key"}]}, {"cod": "bool", "name": "decrypt_file", "dom": [{"type": "AESdemo", "name": "self"}, {"type": "str", "name": "in_file_path"}, {"type": "str", "name": "out_file_path"}]}, {"cod": "bool", "name": "encrypt_file", "dom": [{"type": "AESdemo", "name": "self"}, {"type": "str", "name": "in_file_path"}, {"type": "str", "name": "out_file_path"}]}], "field": [{"type": "Void", "name": "_salt"}, {"type": "List(int)", "name": "_iv"}, {"type": "List(int)", "name": "_key"}, {"type": "bool", "name": "_python3"}], "name": "AESdemo"}]}
{"name": "main", "class": [{"name": "Foo", "field": false, "method": [{"name": "foo", "cod": "Void", "dom": [{"name": "self", "type": "Foo"}, {"name": "a", "type": "int"}, {"name": "b", "type": "int"}, {"name": "c", "type": "int"}, {"name": "d", "type": "int"}]}, {"name": "bar", "cod": "Void", "dom": [{"name": "self", "type": "Foo"}, {"name": "a", "type": "int"}, {"name": "b", "type": "int"}, {"name": "c", "type": "int"}]}, {"name": "baz", "cod": "Void", "dom": [{"name": "self", "type": "Foo"}, {"name": "a", "type": "int"}, {"name": "b", "type": "int"}]}, {"name": "quux", "cod": "Void", "dom": [{"name": "self", "type": "Foo"}, {"name": "a", "type": "int"}]}, {"name": "qux", "cod": "Void", "dom": [{"name": "self", "type": "Foo"}]}]}], "function": [{"name": "test_calls", "cod": "Void", "dom": []}]}
{"name": "main", "class": [{"name": "Foo", "method": [{"name": "foo", "dom": [{"name": "self", "type": "Foo"}, {"name": "a", "type": "int"}, {"name": "b", "type": "int"}, {"name": "c", "type": "int"}, {"name": "d", "type": "int"}], "cod": "Void"}, {"name": "bar", "dom": [{"name": "self", "type": "Foo"}, {"name": "a", "type": "int"}, {"name": "b", "type": "int"}, {"name": "c", "type": "int"}], "cod": "Void"}, {"name": "baz", "dom": [{"name": "self", "type": "Foo"}, {"name": "a", "type": "int"}, {"name": "b", "type": "int"}], "cod": "Void"}, {"name": "quux", "dom": [{"name": "self", "type": "Foo"}, {"name": "a", "type": "int"}], "cod": "Void"}, {"name": "qux", "dom": [{"name": "self", "type": "Foo"}], "cod": "Void"}], "field": false}], "function": [{"name": "test_calls", "dom": [], "cod": "Void"}]}
{"class": [], "name": "main", "function": [{"cod": "Void", "name": "foo", "dom": [{"name": "a", "type": "int"}, {"name": "b", "type": "int"}, {"name": "c", "type": "int"}, {"name": "d", "type": "int"}]}, {"cod": "Void", "name": "bar", "dom": [{"name": "a", "type": "int"}, {"name": "b", "type": "int"}, {"name": "c", "type": "int"}]}, {"cod": "Void", "name": "baz", "dom": [{"name": "a", "type": "int"}, {"name": "b", "type": "int"}]}, {"cod": "Void", "name": "quux", "dom": [{"name": "a", "type": "int"}]}, {"cod": "Void", "name": "qux", "dom": []}, {"cod": "Void", "name": "test_calls", "dom": []}]}
{"name": "main", "class": [{"name": "GVector", "field": [{"name": "x", "type": "float"}, {"name": "y", "type": "float"}, {"name": "z", "type": "float"}], "method": [{"name": "__init__", "dom": [{"name": "self", "type": "GVector"}, {"name": "x", "type": "int"}, {"name": "y", "type": "int"}, {"name": "z", "type": "int"}], "cod": "Void"}, {"name": "Mag", "dom": [{"name": "self", "type": "GVector"}], "cod": "float"}, {"name": "dist", "dom": [{"name": "self", "type": "GVector"}, {"name": "other", "type": "GVector"}], "cod": "float"}, {"name": "__add__", "dom": [{"name": "self", "type": "GVector"}, {"name": "other", "type": "GVector"}], "cod": "GVector"}, {"name": "__sub__", "dom": [{"name": "self", "type": "GVector"}, {"name": "other", "type": "GVector"}], "cod": "GVector"}, {"name": "__mul__", "dom": [{"name": "self", "type": "GVector"}, {"name": "other", "type": "float"}], "cod": "GVector"}, {"name": "linear_combination", "dom": [{"name": "self", "type": "GVector"}, {"name": "other", "type": "GVector"}, {"name": "l1", "type": "float"}, {"name": "l2", "type": "float"}], "cod": "GVector"}]}, {"name": "Spline", "field": [{"name": "knots", "type": "List(int)"}, {"name": "points", "type": "List(GVector)"}, {"name": "degree", "type": "int"}], "method": [{"name": "__init__", "dom": [{"name": "self", "type": "Spline"}, {"name": "points", "type": "List(GVector)"}, {"name": "degree", "type": "int"}, {"name": "knots", "type": "List(int)"}], "cod": "Void"}, {"name": "GetDomain", "dom": [{"name": "self", "type": "Spline"}], "cod": "[int,int]"}, {"name": "__call__", "dom": [{"name": "self", "type": "Spline"}, {"name": "u", "type": "float"}], "cod": "GVector"}]}, {"name": "Chaosgame", "field": [{"name": "thickness", "type": "float"}, {"name": "splines", "type": "List(Spline)"}, {"name": "minx", "type": "float"}, {"name": "miny", "type": "float"}, {"name": "maxx", "type": "float"}, {"name": "maxy", "type": "float"}, {"name": "width", "type": "float"}, {"name": "height", "type": "float"}, {"name": "num_trafos", "type": "List(int)"}, {"name": "num_total", "type": "int"}], "method": [{"name": "__init__", "dom": [{"name": "self", "type": "Chaosgame"}, {"name": "splines", "type": "List(Spline)"}, {"name": "thickness", "type": "float"}, {"name": "w", "type": "int"}, {"name": "h", "type": "int"}, {"name": "n", "type": "int"}], "cod": "Void"}, {"name": "transform_point", "dom": [{"name": "self", "type": "Chaosgame"}, {"name": "point", "type": "GVector"}], "cod": "GVector"}]}], "function": []}
{"function": [{"name": "fannkuch", "dom": [{"type": "int", "name": "n"}], "cod": "int"}], "name": "main", "class": []}
{"class": [{"field": [{"type": "float", "name": "x"}, {"type": "float", "name": "y"}, {"type": "float", "name": "z"}], "name": "Point", "method": [{"name": "__init__", "cod": "Void", "dom": [{"type": "Point", "name": "self"}, {"type": "float", "name": "i"}]}, {"name": "normalize", "cod": "Void", "dom": [{"type": "Point", "name": "self"}]}, {"name": "maximize", "cod": "Point", "dom": [{"type": "Point", "name": "self"}, {"type": "Point", "name": "other"}]}]}], "function": [{"name": "maximize", "cod": "Point", "dom": [{"type": "List(Point)", "name": "points"}]}, {"name": "benchmark", "cod": "Point", "dom": [{"type": "int", "name": "n"}]}], "name": "main"}
{"name": "futen", "class": [], "function": [{"name": "parse", "dom": [{"name": "lines", "type": "List(String)"}], "cod": "SSHConfig"}, {"name": "get_netloc", "dom": [{"name": "entry", "type": "Tuple(List(String),Dict(String,String))"}, {"name": "parser", "type": "SSHConfig"}], "cod": "Tuple(String,String)"}, {"name": "get_netlocs", "dom": [{"name": "lines", "type": "List(String)"}], "cod": "Dict(String,String)"}, {"name": "execute", "dom": [{"name": "lines", "type": "List(String)"}, {"name": "template_file", "type": "String"}], "cod": "String"}]}
{"function": [{"cod": "Void", "dom": [{"type": "Int", "name": "n"}], "name": "main"}], "class": [], "name": "main"}
{"name": "paramiko_config", "class": [{"name": "SSHConfig", "field": [{"name": "SETTINGS_REGEX", "type": "String"}, {"name": "_config", "type": "List(Tuple(List(String),Dict(String,String)))"}], "method": [{"name": "__init__", "dom": [{"name": "self", "type": "SSHConfig"}], "cod": "Void"}, {"name": "parse", "dom": [{"name": "self", "type": "SSHConfig"}, {"name": "file_obj", "type": "List(String)"}], "cod": "Void"}, {"name": "lookup", "dom": [{"name": "self", "type": "SSHConfig"}, {"name": "hostname", "type": "String"}], "cod": "Dict(String,String)"}, {"name": "_allowed", "dom": [{"name": "self", "type": "SSHConfig"}, {"name": "hosts", "type": "List(String)"}, {"name": "hostname", "type": "String"}], "cod": "Bool"}, {"name": "_expand_variables", "dom": [{"name": "self", "type": "SSHConfig"}, {"name": "config", "type": "Dict(String,String)"}, {"name": "hostname", "type": "String"}], "cod": "Dict(String,String)"}, {"name": "_get_hosts", "dom": [{"name": "self", "type": "SSHConfig"}, {"name": "host", "type": "String"}], "cod": "List(String)"}]}, {"name": "LazyFqdn", "field": [{"name": "fqdn", "type": "Dyn"}, {"name": "config", "type": "Dict(String,String)"}, {"name": "host", "type": "String"}], "method": [{"name": "__init__", "dom": [{"name": "self", "type": "LazyFqdn"}, {"name": "config", "type": "Dict(String,String)"}, {"name": "host", "type": "String"}], "cod": "Void"}, {"name": "__str__", "dom": [{"name": "self", "type": "LazyFqdn"}], "cod": "String"}]}], "function": []}
{"name": "square", "class": [{"name": "Square", "field": [{"type": "int", "name": "pos"}, {"type": "List(int)", "name": "zobrist_strings"}, {"type": "int", "name": "color"}, {"type": "Dyn", "name": "board"}, {"type": "int", "name": "timestamp"}, {"type": "int", "name": "removestamp"}, {"type": "Dyn", "name": "reference"}, {"type": "int", "name": "ledges"}, {"type": "bool", "name": "used"}, {"type": "List(Dyn)", "name": "neighbours"}], "method": [{"dom": [{"type": "Square", "name": "self"}, {"type": "Board", "name": "board"}, {"type": "int", "name": "pos"}], "name": "__init__", "cod": "Void"}, {"dom": [{"type": "Square", "name": "self"}], "name": "set_neighbours", "cod": "Void"}, {"dom": [{"type": "Square", "name": "self"}, {"type": "int", "name": "color"}], "name": "move", "cod": "Void"}, {"dom": [{"type": "Square", "name": "self"}, {"type": "Square", "name": "reference"}, {"type": "bool", "name": "update"}], "name": "remove", "cod": "Void"}, {"dom": [{"type": "Square", "name": "self"}, {"type": "bool", "name": "update"}], "name": "find", "cod": "Square"}]}], "function": [{"dom": [{"type": "int", "name": "x"}, {"type": "int", "name": "y"}], "name": "to_pos", "cod": "int"}]}
{"class": [{"method": [{"dom": [{"type": "Iri2Uri", "name": "self"}, {"type": "String", "name": "c"}], "name": "encode", "cod": "String"}, {"dom": [{"type": "Iri2Uri", "name": "self"}, {"type": "String", "name": "uri"}], "name": "iri2uri", "cod": "String"}], "name": "Iri2Uri", "field": [{"type": "List(Tuple(Int,Int))", "name": "escape_range"}]}], "name": "iri2uri", "function": []}
{"function": [{"dom": [], "cod": "Void", "name": "main"}], "name": "main", "class": []}
{"function": [{"dom": [{"type": "List(int)", "name": "ido"}], "cod": "List(float)", "name": "rotate"}, {"dom": [{"type": "List(int)", "name": "ido"}], "cod": "List(float)", "name": "flip"}, {"dom": [{"type": "List(int)", "name": "ido"}, {"type": "List(int)", "name": "r_ido"}], "cod": "List(float)", "name": "permute"}, {"dom": [{"type": "List(float)", "name": "ido"}], "cod": "List(float)", "name": "convert"}, {"dom": [{"type": "List(float)", "name": "board"}, {"type": "Dict(float,int)", "name": "cti"}, {"type": "List(List(List(float)))", "name": "pieces"}], "cod": "List(List(List(Set(List(int)))))", "name": "get_footprints"}, {"dom": [{"type": "List(float)", "name": "board"}, {"type": "Dict(float,int)", "name": "cti"}], "cod": "List(Set(List(int)))", "name": "get_senh"}, {"dom": [], "cod": "[List(float),Dict(float,int),List(List(List(float)))]", "name": "get_puzzle"}, {"dom": [{"type": "int", "name": "n"}, {"type": "int", "name": "i_min"}, {"type": "List(int)", "name": "free"}, {"type": "List(int)", "name": "curr_board"}, {"type": "List(int)", "name": "pieces_left"}, {"type": "List(int)", "name": "solutions"}], "cod": "Void", "name": "solve"}], "name": "main", "class": []}
{"name": "main", "function": [{"name": "combinations", "cod": "List([List([List(float),List(float),float]),[List(float),List(float),float]])", "dom": [{"name": "l", "type": "List([List(float),List(float),float])"}]}, {"name": "advance", "cod": "Void", "dom": [{"name": "dt", "type": "float"}, {"name": "n", "type": "int"}]}, {"name": "report_energy", "cod": "float", "dom": []}, {"name": "offset_momentum", "cod": "Void", "dom": [{"name": "ref", "type": "[List(float),List(float),float]"}]}, {"name": "test_nbody", "cod": "Void", "dom": []}], "class": []}
{"class": [], "function": [{"cod": "List(List(int))", "dom": [{"type": "List(int)", "name": "iterable"}], "name": "permutations"}, {"cod": "List(List(int))", "dom": [{"type": "int", "name": "queen_count"}], "name": "n_queens"}], "name": "main"}
{"function": [{"cod": "[int,int,int,int]", "dom": [{"type": "int", "name": "k"}], "name": "gen_x"}, {"cod": "[int,int,int,int]", "dom": [{"type": "[int,int,int,int]", "name": "a"}, {"type": "[int,int,int,int]", "name": "b"}], "name": "compose"}, {"cod": "int", "dom": [{"type": "[int,int,int,int]", "name": "z"}, {"type": "int", "name": "j"}], "name": "extract"}, {"cod": "List(int)", "dom": [{"type": "int", "name": "limit"}], "name": "pi_digits"}, {"cod": "List(int)", "dom": [{"type": "int", "name": "n"}], "name": "calc_ndigits"}], "class": [], "name": "main"}
{"function": [{"cod": "PSRecord", "name": "Proc1", "dom": [{"type": "PSRecord", "name": "PtrParIn"}]}, {"cod": "int", "name": "Proc2", "dom": [{"type": "int", "name": "IntParIO"}]}, {"cod": "PSRecord", "name": "Proc3", "dom": [{"type": "PSRecord", "name": "PtrParOut"}]}, {"cod": "Void", "name": "Proc4", "dom": []}, {"cod": "Void", "name": "Proc5", "dom": []}, {"cod": "int", "name": "Proc6", "dom": [{"type": "int", "name": "EnumParIn"}]}, {"cod": "int", "name": "Proc7", "dom": [{"type": "int", "name": "IntParI1"}, {"type": "int", "name": "IntParI2"}]}, {"cod": "Void", "name": "Proc8", "dom": [{"type": "List(int)", "name": "Array1Par"}, {"type": "List(List(int))", "name": "Array2Par"}, {"type": "int", "name": "IntParI1"}, {"type": "int", "name": "IntParI2"}]}, {"cod": "int", "name": "Func1", "dom": [{"type": "str", "name": "CharPar1"}, {"type": "str", "name": "CharPar2"}]}, {"cod": "int", "name": "Func2", "dom": [{"type": "str", "name": "StrParI1"}, {"type": "str", "name": "StrParI2"}]}, {"cod": "int", "name": "Func3", "dom": [{"type": "int", "name": "EnumParIn"}]}], "name": "main", "class": [{"field": [{"type": "str", "name": "StringComp"}, {"type": "int", "name": "IntComp"}, {"type": "int", "name": "Discr"}, {"type": "int", "name": "EnumComp"}, {"type": "Dyn", "name": "PtrComp"}], "name": "PSRecord", "method": [{"cod": "Void", "name": "__init__", "dom": [{"type": "PSRecord", "name": "self"}]}, {"cod": "PSRecord", "name": "copy", "dom": [{"type": "PSRecord", "name": "self"}]}]}]}
{"name": "Automata", "class": [{"field": [{"name": "current", "type": "Int"}, {"name": "payoff", "type": "Float"}, {"name": "table", "type": "List(List(Int))"}, {"name": "initial", "type": "Int"}], "name": "Automaton", "method": [{"name": "__init__", "dom": [{"name": "self", "type": "Automaton"}, {"name": "current", "type": "Int"}, {"name": "payoff", "type": "Float"}, {"name": "table", "type": "List(List(Int))"}, {"name": "initial", "type": "Int"}], "cod": "Void"}, {"name": "interact", "dom": [{"name": "self", "type": "Automaton"}, {"name": "other", "type": "Automaton"}, {"name": "r", "type": "Int"}], "cod": "List(Automaton)"}, {"name": "clone", "dom": [{"name": "self", "type": "Automaton"}], "cod": "Automaton"}, {"name": "reset", "dom": [{"name": "self", "type": "Automaton"}], "cod": "Automaton"}]}], "function": []}
{"class": [], "function": [{"dom": [{"type": "Int", "name": "n"}], "cod": "Automaton", "name": "make_random_automaton"}, {"dom": [{"type": "Int", "name": "n"}], "cod": "Population", "name": "build_random_population"}], "name": "Other"}
{"function": [], "class": [{"field": [{"type": "List(Automaton)", "name": "a"}], "name": "Population", "method": [{"dom": [{"type": "Population", "name": "self"}, {"type": "List(Automaton)", "name": "a"}], "cod": "Void", "name": "__init__"}, {"dom": [{"type": "Population", "name": "self"}], "cod": "List(Float)", "name": "payoffs"}, {"dom": [{"type": "Population", "name": "self"}, {"type": "Int", "name": "r"}], "cod": "Population", "name": "match_up"}, {"dom": [{"type": "Population", "name": "self"}, {"type": "Int", "name": "rate"}], "cod": "Population", "name": "regenerate"}, {"dom": [{"type": "Population", "name": "self"}], "cod": "Void", "name": "shuffle"}]}], "name": "Population"}
{"name": "Utilities", "function": [{"cod": "List(Float)", "dom": [{"type": "List(Float)", "name": "probabilities"}], "name": "accumulated_s"}, {"cod": "List(Int)", "dom": [{"type": "List(Float)", "name": "probabilities"}, {"type": "Int", "name": "speed"}], "name": "choose_randomly"}, {"cod": "Float", "dom": [{"type": "List(Float)", "name": "l"}, {"type": "Float", "name": "w"}], "name": "relative_average"}], "class": []}
{"name": "main", "function": [{"cod": "Void", "name": "run", "dom": []}, {"cod": "List(Float)", "name": "evolve", "dom": [{"type": "Population", "name": "p"}, {"type": "Int", "name": "c"}, {"type": "Int", "name": "s"}, {"type": "Int", "name": "r"}]}, {"cod": "List(Tuple(Int,Float))", "name": "simulation_to_lines", "dom": [{"type": "List(Float)", "name": "data"}]}], "class": []}
{"class": [], "function": [{"dom": [{"name": "algorithm", "type": "String"}, {"name": "message", "type": "Bytes"}], "cod": "{digest : Function([],Bytes)}", "name": "new"}, {"dom": [{"name": "message", "type": "Bytes"}], "cod": "SHA1", "name": "sha1"}, {"dom": [{"name": "message", "type": "Bytes"}], "cod": "SHA512", "name": "sha512"}, {"dom": [], "cod": "Void", "name": "main"}], "name": "main"}
{"name": "sha1", "class": [{"name": "SHA1", "field": [{"type": "Int", "name": "h0"}, {"type": "Int", "name": "h4"}, {"type": "Int", "name": "h3"}, {"type": "Int", "name": "h2"}, {"type": "Int", "name": "h1"}], "method": [{"name": "__init__", "dom": [{"type": "Self", "name": "self"}, {"type": "Bytes", "name": "message"}], "cod": "Void"}, {"name": "handle", "dom": [{"type": "SHA1", "name": "self"}, {"type": "Bytes", "name": "chunk"}], "cod": "Void"}, {"name": "_digest", "dom": [{"type": "Self", "name": "self"}], "cod": "Tuple(Int,Int,Int,Int,Int)"}, {"name": "hexdigest", "dom": [{"type": "Self", "name": "self"}], "cod": "String"}, {"name": "digest", "dom": [{"type": "Self", "name": "self"}], "cod": "Bytes"}]}], "function": []}
{"function": [], "name": "sha2_64", "class": [{"name": "sha2_64", "field": [{"name": "h0", "type": "Int"}, {"name": "h7", "type": "Int"}, {"name": "h6", "type": "Int"}, {"name": "h5", "type": "Int"}, {"name": "h4", "type": "Int"}, {"name": "h3", "type": "Int"}, {"name": "h2", "type": "Int"}, {"name": "h1", "type": "Int"}], "method": [{"dom": [{"name": "self", "type": "Self"}, {"name": "message", "type": "Bytes"}], "name": "__init__", "cod": "Void"}, {"dom": [{"name": "self", "type": "Self"}, {"name": "chunk", "type": "Bytes"}], "name": "handle", "cod": "Void"}, {"dom": [{"name": "self", "type": "Self"}], "name": "hexdigest", "cod": "String"}, {"dom": [{"name": "self", "type": "Self"}], "name": "digest", "cod": "Bytes"}]}]}
{"class": [{"method": [{"dom": [{"type": "Self", "name": "self"}], "name": "_digest", "cod": "Tuple(Int,Int,Int,Int,Int,Int,Int,Int)"}], "field": [{"type": "Int", "name": "h0"}, {"type": "Int", "name": "h7"}, {"type": "Int", "name": "h6"}, {"type": "Int", "name": "h5"}, {"type": "Int", "name": "h4"}, {"type": "Int", "name": "h3"}, {"type": "Int", "name": "h2"}, {"type": "Int", "name": "h1"}], "name": "SHA512"}], "function": [], "name": "sha512"}
{"name": "main", "class": [], "function": [{"name": "eval_A", "cod": "float", "dom": [{"name": "i", "type": "float"}, {"name": "j", "type": "float"}]}, {"name": "eval_times_u", "cod": "List(float)", "dom": [{"name": "func", "type": "Function([Tuple(float,List(float))],float)"}, {"name": "u", "type": "List(float)"}]}, {"name": "eval_AtA_times_u", "cod": "List(float)", "dom": [{"name": "u", "type": "List(float)"}]}, {"name": "part_A_times_u", "cod": "float", "dom": [{"name": "i_u", "type": "[float,List(float)]"}]}, {"name": "part_At_times_u", "cod": "float", "dom": [{"name": "i_u", "type": "[float,List(float)]"}]}]}
{"function": [{"dom": [{"type": "List(List(float))", "name": "lists"}], "cod": "[float,float]", "name": "F_oneway"}, {"dom": [{"type": "float", "name": "ER"}, {"type": "float", "name": "EF"}, {"type": "float", "name": "dfnum"}, {"type": "float", "name": "dfden"}], "cod": "float", "name": "F_value"}], "class": [], "name": "anova"}
{"name": "central_tendency", "function": [{"name": "geometricmean", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"name": "harmonicmean", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"name": "mean", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"name": "median", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"name": "medianscore", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"name": "mode", "cod": "[int,List(float)]", "dom": [{"name": "inlist", "type": "List(float)"}]}], "class": []}
{"function": [{"cod": "[float,float]", "dom": [{"type": "List(float)", "name": "x"}, {"type": "List(float)", "name": "y"}], "name": "pearsonr"}, {"cod": "float", "dom": [{"type": "float", "name": "x"}, {"type": "float", "name": "y"}], "name": "lincc"}, {"cod": "[float,float]", "dom": [{"type": "List(float)", "name": "x"}, {"type": "List(float)", "name": "y"}], "name": "spearmanr"}, {"cod": "[float,float]", "dom": [{"type": "List(float)", "name": "x"}, {"type": "List(float)", "name": "y"}], "name": "pointbiserialr"}, {"cod": "[float,float]", "dom": [{"type": "List(float)", "name": "x"}, {"type": "List(float)", "name": "y"}], "name": "kendalltau"}, {"cod": "[float,float,float,float,float]", "dom": [{"type": "List(float)", "name": "x"}, {"type": "List(float)", "name": "y"}], "name": "linregress"}], "name": "correlation", "class": []}
{"name": "frequency", "function": [{"dom": [{"name": "inlist", "type": "List(float)"}], "cod": "List(List(float))", "name": "itemfreq"}, {"dom": [{"name": "inlist", "type": "List(float)"}, {"name": "percent", "type": "float"}], "cod": "float", "name": "scoreatpercentile"}, {"dom": [{"name": "inlist", "type": "List(float)"}, {"name": "score", "type": "int"}], "cod": "float", "name": "percentileofscore"}, {"dom": [{"name": "inlist", "type": "List(float)"}, {"name": "numbins", "type": "int"}, {"name": "defaultreallimits", "type": "[float,float]"}], "cod": "[List(int),float,float,int]", "name": "histogram"}, {"dom": [{"name": "inlist", "type": "List(float)"}], "cod": "[List(int),float,float,int]", "name": "cumfreq"}, {"dom": [{"name": "inlist", "type": "List(float)"}], "cod": "[List(float),float,float,int]", "name": "relfreq"}], "class": []}
{"name": "inferential", "function": [{"name": "ttest_1samp", "dom": [{"name": "a", "type": "List(float)"}, {"name": "popmean", "type": "int"}], "cod": "[float,float]"}, {"name": "ttest_ind", "dom": [{"name": "a", "type": "List(float)"}, {"name": "b", "type": "List(float)"}], "cod": "[float,float]"}, {"name": "ttest_rel", "dom": [{"name": "a", "type": "List(float)"}, {"name": "b", "type": "List(float)"}], "cod": "[float,float]"}, {"name": "chisquare", "dom": [{"name": "f_obs", "type": "List(float)"}], "cod": "[float,float]"}, {"name": "ks_2samp", "dom": [{"name": "data1", "type": "List(float)"}, {"name": "data2", "type": "List(float)"}], "cod": "[float,float]"}, {"name": "mannwhitneyu", "dom": [{"name": "x", "type": "List(float)"}, {"name": "y", "type": "List(float)"}], "cod": "[float,float]"}, {"name": "tiecorrect", "dom": [{"name": "rankvals", "type": "List(float)"}], "cod": "float"}, {"name": "ranksums", "dom": [{"name": "x", "type": "List(float)"}, {"name": "y", "type": "List(float)"}], "cod": "[float,float]"}, {"name": "wilcoxont", "dom": [{"name": "x", "type": "List(float)"}, {"name": "y", "type": "List(float)"}], "cod": "[float,float]"}, {"name": "kruskalwallish", "dom": [{"name": "args", "type": "List(List(float))"}], "cod": "[float,float]"}, {"name": "friedmanchisquare", "dom": [{"name": "args", "type": "List(List(float))"}], "cod": "[float,float]"}], "class": []}
{"class": [], "name": "main", "function": [{"name": "print_noop", "dom": [], "cod": false}]}
{"class": [], "name": "moment", "function": [{"name": "moment", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}, {"name": "moment", "type": "int"}]}, {"name": "variation", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"name": "skew", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"name": "kurtosis", "cod": "float", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"name": "describe", "cod": "[int,[float,float],float,float,float,float]", "dom": [{"name": "inlist", "type": "List(float)"}]}]}
{"name": "probability", "class": [], "function": [{"dom": [{"name": "x", "type": "float"}, {"name": "BIG", "type": "float"}], "name": "ex", "cod": "float"}, {"dom": [{"name": "chisq", "type": "float"}, {"name": "df", "type": "int"}], "name": "chisqprob", "cod": "float"}, {"dom": [{"name": "x", "type": "float"}], "name": "erfcc", "cod": "float"}, {"dom": [{"name": "_z", "type": "float"}], "name": "zprob", "cod": "float"}, {"dom": [{"name": "alam", "type": "float"}], "name": "ksprob", "cod": "float"}, {"dom": [{"name": "dfnum", "type": "float"}, {"name": "dfden", "type": "float"}, {"name": "F", "type": "float"}], "name": "fprob", "cod": "float"}, {"dom": [{"name": "a", "type": "float"}, {"name": "b", "type": "float"}, {"name": "x", "type": "float"}], "name": "betacf", "cod": "float"}, {"dom": [{"name": "xx", "type": "float"}], "name": "gammln", "cod": "float"}, {"dom": [{"name": "a", "type": "float"}, {"name": "b", "type": "float"}, {"name": "x", "type": "float"}], "name": "betai", "cod": "float"}]}
{"name": "pstat", "function": [{"name": "abut", "cod": "List(Dyn)", "dom": [{"name": "source", "type": "Dyn"}, {"name": "tgt", "type": "Dyn"}]}, {"name": "simpleabut", "cod": "List(Dyn)", "dom": [{"name": "source", "type": "List(Dyn)"}, {"name": "addon", "type": "List(Dyn)"}]}, {"name": "colex", "cod": "Dyn", "dom": [{"name": "listoflists", "type": "List(List(Dyn))"}, {"name": "cnums", "type": "Dyn"}]}, {"name": "linexand", "cod": "List(List(Dyn))", "dom": [{"name": "listoflists", "type": "List(List(Dyn))"}, {"name": "columnlist", "type": "Dyn"}, {"name": "valuelist", "type": "Dyn"}]}, {"name": "recode", "cod": "List(Dyn)", "dom": [{"name": "inlist", "type": "Dyn"}, {"name": "listmap", "type": "Dyn"}, {"name": "cols", "type": "Dyn"}]}, {"name": "unique", "cod": "List(float)", "dom": [{"name": "inlist", "type": "List(float)"}]}], "class": []}
{"name": "support", "class": [], "function": [{"cod": "float", "name": "sum", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "List(int)", "name": "cumsum", "dom": [{"name": "inlist", "type": "List(int)"}]}, {"cod": "float", "name": "ss", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "float", "name": "summult", "dom": [{"name": "list1", "type": "List(float)"}, {"name": "list2", "type": "List(float)"}]}, {"cod": "float", "name": "sumdiffsquared", "dom": [{"name": "x", "type": "List(float)"}, {"name": "y", "type": "List(float)"}]}, {"cod": "float", "name": "square_of_sums", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "[List(float),List(int)]", "name": "shellsort", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "List(float)", "name": "rankdata", "dom": [{"name": "inlist", "type": "List(float)"}]}]}
{"class": [], "name": "trimming", "function": [{"dom": [{"name": "l", "type": "List(float)"}, {"name": "proportiontocut", "type": "float"}], "name": "trimboth", "cod": "List(float)"}, {"dom": [{"name": "l", "type": "List(float)"}, {"name": "proportiontocut", "type": "float"}], "name": "trim1", "cod": "List(float)"}]}
{"name": "typed_math", "function": [{"dom": [{"name": "x", "type": "float"}, {"name": "y", "type": "float"}], "name": "pow", "cod": "float"}, {"dom": [{"name": "x", "type": "float"}], "name": "sqrt", "cod": "float"}, {"dom": [{"name": "x", "type": "float"}], "name": "exp", "cod": "float"}, {"dom": [{"name": "x", "type": "float"}], "name": "abs", "cod": "float"}, {"dom": [{"name": "x", "type": "float"}], "name": "fabs", "cod": "float"}, {"dom": [{"name": "x", "type": "float"}], "name": "log", "cod": "float"}, {"dom": [{"name": "n", "type": "float"}, {"name": "d", "type": "float"}], "name": "round", "cod": "float"}], "class": []}
{"name": "variability", "class": [], "function": [{"cod": "List(List(float))", "name": "obrientransform", "dom": [{"name": "args", "type": "List(List(float))"}]}, {"cod": "float", "name": "samplevar", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "float", "name": "samplestdev", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "float", "name": "cov", "dom": [{"name": "x", "type": "List(float)"}, {"name": "y", "type": "List(float)"}]}, {"cod": "float", "name": "var", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "float", "name": "stdev", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "float", "name": "sterr", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "float", "name": "sem", "dom": [{"name": "inlist", "type": "List(float)"}]}, {"cod": "float", "name": "z", "dom": [{"name": "inlist", "type": "List(float)"}, {"name": "score", "type": "float"}]}, {"cod": "List(float)", "name": "zs", "dom": [{"name": "inlist", "type": "List(float)"}]}]}
{"name": "dealer", "class": [{"name": "Dealer", "method": [{"name": "__init__", "dom": [{"name": "self", "type": "Dealer"}, {"name": "players", "type": "List(Player)"}, {"name": "bull_points", "type": "List(Int)"}, {"name": "cards_per_game", "type": "Int"}], "cod": "Void"}, {"name": "simulate_game", "dom": [{"name": "self", "type": "Dealer"}], "cod": "List(Tuple(Int,Int))"}, {"name": "create_deck", "dom": [{"name": "self", "type": "Dealer"}, {"name": "deck_size", "type": false}, {"name": "bull_points", "type": "Float"}, {"name": "order", "type": "Float"}], "cod": "List(Tuple(Int,Int))"}, {"name": "create_stacks", "dom": [{"name": "self", "type": "Dealer"}], "cod": "List(List(Tuple(Int,Int)))"}, {"name": "output_scores", "dom": [{"name": "self", "type": "Dealer"}], "cod": "List(Tuple(Int,Int))"}, {"name": "update_game", "dom": [{"name": "self", "type": "Dealer"}, {"name": "player", "type": "Player"}, {"name": "stack_index", "type": "Int"}, {"name": "stacks", "type": "List(List(Tuple(Int,Int)))"}], "cod": "Tuple(Int,List(List(Tuple(Int,Int))))"}, {"name": "replace_card", "dom": [{"name": "self", "type": "Dealer"}, {"name": "card", "type": "Tuple(Int,Int)"}, {"name": "index", "type": "Int"}, {"name": "stacks", "type": "List(List(Tuple(Int,Int)))"}], "cod": "List(List(Tuple(Int,Int)))"}], "field": [{"name": "players", "type": "List(Player)"}, {"name": "bull_points", "type": "List(Int)"}, {"name": "cards_per_game", "type": "Int"}]}], "function": []}
{"function": [{"dom": [{"type": "List(Player)", "name": "players"}, {"type": "Int", "name": "cards_per_game"}], "cod": "Dealer", "name": "generate_dealer"}, {"dom": [{"type": "Int", "name": "num_players"}], "cod": "List(Player)", "name": "generate_players"}, {"dom": [], "cod": "Void", "name": "main"}], "name": "main", "class": []}
{"function": [], "name": "player", "class": [{"field": [{"name": "name", "type": "Int"}, {"name": "cards", "type": "List(Tuple(Int,Int))"}], "name": "Player", "method": [{"cod": "Void", "name": "__init__", "dom": [{"name": "self", "type": "Player"}, {"name": "name", "type": "Int"}, {"name": "cards", "type": "List(Tuple(Int,Int))"}]}, {"cod": "Int", "name": "discard", "dom": [{"name": "self", "type": "Player"}]}, {"cod": "Int", "name": "choose_correct_stack", "dom": [{"name": "self", "type": "Player"}, {"name": "stacks", "type": "List(List(Tuple(Int,Int)))"}]}, {"cod": "Int", "name": "get_index_of_closest_stack", "dom": [{"name": "self", "type": "Player"}, {"name": "cards", "type": "List(Tuple(Int,Int))"}, {"name": "card", "type": "Tuple(Int,Int)"}]}]}]}
